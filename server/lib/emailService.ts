import sgMail from "@sendgrid/mail";

interface EmailTemplate {
  subject: string;
  html: string;
  text?: string;
}

class EmailService {
  private static instance: EmailService;
  private isConfigured: boolean = false;

  private constructor() {
    this.initialize();
  }

  static getInstance(): EmailService {
    if (!EmailService.instance) {
      EmailService.instance = new EmailService();
    }
    return EmailService.instance;
  }

  private initialize(): void {
    const apiKey = process.env.SENDGRID_API_KEY;

    if (apiKey && apiKey !== "your-sendgrid-api-key") {
      sgMail.setApiKey(apiKey);
      this.isConfigured = true;
      console.log("‚úÖ [EMAIL SERVICE] SendGrid configured successfully");
    } else {
      this.isConfigured = false;
      console.log(
        "‚ö†Ô∏è [EMAIL SERVICE] SendGrid API key not configured - emails will be logged to console",
      );
    }
  }

  // OTP Email Template
  private createOTPTemplate(email: string, otp: string): EmailTemplate {
    return {
      subject: "TerraMRV - ‡§Ü‡§™‡§ï‡§æ OTP Verification Code",
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>TerraMRV OTP</title>
          <style>
            body { 
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
              line-height: 1.6;
              color: #333;
              background-color: #f8f9fa;
              margin: 0;
              padding: 20px;
            }
            .container {
              max-width: 600px;
              margin: 0 auto;
              background: white;
              border-radius: 12px;
              box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
              overflow: hidden;
            }
            .header {
              background: linear-gradient(135deg, #10b981 0%, #059669 100%);
              color: white;
              padding: 30px;
              text-align: center;
            }
            .header h1 {
              margin: 0;
              font-size: 28px;
              font-weight: 700;
            }
            .header p {
              margin: 10px 0 0 0;
              opacity: 0.9;
              font-size: 16px;
            }
            .content {
              padding: 40px 30px;
            }
            .otp-container {
              background: #f8fafc;
              border: 2px solid #e2e8f0;
              border-radius: 12px;
              padding: 30px;
              text-align: center;
              margin: 25px 0;
            }
            .otp-label {
              font-size: 16px;
              color: #64748b;
              margin-bottom: 15px;
              font-weight: 500;
            }
            .otp-code {
              font-size: 36px;
              font-weight: 800;
              color: #059669;
              letter-spacing: 8px;
              font-family: 'Monaco', 'Menlo', monospace;
              margin: 0;
            }
            .otp-timer {
              color: #ef4444;
              font-size: 14px;
              margin-top: 15px;
              font-weight: 600;
            }
            .instructions {
              background: #fef3c7;
              border-left: 4px solid #f59e0b;
              padding: 20px;
              margin: 25px 0;
              border-radius: 6px;
            }
            .instructions h3 {
              margin: 0 0 10px 0;
              color: #92400e;
              font-size: 16px;
            }
            .instructions p {
              margin: 0;
              color: #92400e;
              font-size: 14px;
            }
            .footer {
              background: #f1f5f9;
              padding: 25px 30px;
              text-align: center;
              border-top: 1px solid #e2e8f0;
            }
            .footer p {
              margin: 0;
              color: #64748b;
              font-size: 14px;
            }
            .logo {
              font-size: 24px;
              font-weight: 900;
              margin-bottom: 5px;
            }
            .tagline {
              font-size: 14px;
              opacity: 0.8;
            }
            .security-notice {
              background: #fef2f2;
              border: 1px solid #fecaca;
              border-radius: 8px;
              padding: 15px;
              margin: 20px 0;
            }
            .security-notice p {
              margin: 0;
              color: #dc2626;
              font-size: 13px;
              font-weight: 500;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <div class="logo">üå± TerraMRV</div>
              <p class="tagline">‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Carbon Income ‡§ï‡§æ ‡§®‡§Ø‡§æ ‡§∞‡§æ‡§∏‡•ç‡§§‡§æ</p>
            </div>
            
            <div class="content">
              <h2 style="color: #1f2937; margin: 0 0 20px 0;">Login Verification</h2>
              <p style="color: #4b5563; font-size: 16px;">
                ‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Ü‡§™‡§ï‡§æ OTP verification code ‡§§‡•à‡§Ø‡§æ‡§∞ ‡§π‡•à‡•§
              </p>
              
              <div class="otp-container">
                <div class="otp-label">‡§Ü‡§™‡§ï‡§æ OTP Code ‡§π‡•à:</div>
                <div class="otp-code">${otp}</div>
                <div class="otp-timer">‚è∞ ‡§Ø‡§π OTP ‡§ï‡•á‡§µ‡§≤ 5 ‡§Æ‡§ø‡§®‡§ü ‡§ï‡•á ‡§≤‡§ø‡§è valid ‡§π‡•à</div>
              </div>
              
              <div class="instructions">
                <h3>üîê ‡§ï‡•à‡§∏‡•á use ‡§ï‡§∞‡•á‡§Ç:</h3>
                <p>1. TerraMRV app ‡§Æ‡•á‡§Ç ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç<br>
                2. ‡§Ø‡§π 6-digit code enter ‡§ï‡§∞‡•á‡§Ç<br>
                3. "Verify OTP" ‡§™‡§∞ click ‡§ï‡§∞‡•á‡§Ç</p>
              </div>
              
              <div class="security-notice">
                <p>üõ°Ô∏è Security Notice: ‡§Ö‡§ó‡§∞ ‡§Ü‡§™‡§®‡•á ‡§Ø‡§π OTP request ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à, ‡§§‡•ã ‡§á‡§∏ email ‡§ï‡•ã ignore ‡§ï‡§∞‡•á‡§Ç‡•§</p>
              </div>
              
              <p style="color: #6b7280; font-size: 14px; margin-top: 30px;">
                TerraMRV platform ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! ‡§π‡§Æ‡§æ‡§∞‡•á ‡§∏‡§æ‡§• sustainable farming ‡§ï‡•Ä ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
              </p>
            </div>
            
            <div class="footer">
              <p><strong>TerraMRV</strong> - Sustainable Farming Solutions</p>
              <p>‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã carbon credits ‡§∏‡•á extra income ‡§¶‡§ø‡§≤‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç</p>
              <p style="margin-top: 15px; font-size: 12px;">
                ‡§Ø‡§π ‡§è‡§ï automated email ‡§π‡•à‡•§ ‡§ï‡•É‡§™‡§Ø‡§æ reply ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§
              </p>
            </div>
          </div>
        </body>
        </html>
      `,
      text: `
TerraMRV - OTP Verification

‡§®‡§Æ‡§∏‡•ç‡§§‡•á!

‡§Ü‡§™‡§ï‡§æ OTP verification code: ${otp}

‡§Ø‡§π code ‡§ï‡•á‡§µ‡§≤ 5 ‡§Æ‡§ø‡§®‡§ü ‡§ï‡•á ‡§≤‡§ø‡§è valid ‡§π‡•à‡•§

‡§ï‡•à‡§∏‡•á use ‡§ï‡§∞‡•á‡§Ç:
1. TerraMRV app ‡§Æ‡•á‡§Ç ‡§µ‡§æ‡§™‡§∏ ‡§ú‡§æ‡§è‡§Ç
2. ‡§Ø‡§π 6-digit code enter ‡§ï‡§∞‡•á‡§Ç  
3. "Verify OTP" ‡§™‡§∞ click ‡§ï‡§∞‡•á‡§Ç

‡§Ö‡§ó‡§∞ ‡§Ü‡§™‡§®‡•á ‡§Ø‡§π OTP request ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à, ‡§§‡•ã ‡§á‡§∏ email ‡§ï‡•ã ignore ‡§ï‡§∞‡•á‡§Ç‡•§

TerraMRV
‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Carbon Income ‡§ï‡§æ ‡§®‡§Ø‡§æ ‡§∞‡§æ‡§∏‡•ç‡§§‡§æ
      `,
    };
  }

  // Welcome Email Template
  private createWelcomeTemplate(
    farmerName: string,
    estimatedIncome: number,
  ): EmailTemplate {
    return {
      subject: "TerraMRV ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! üå±",
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <title>Welcome to TerraMRV</title>
          <style>
            body { 
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Arial, sans-serif;
              line-height: 1.6;
              color: #333;
              background-color: #f8f9fa;
              margin: 0;
              padding: 20px;
            }
            .container {
              max-width: 600px;
              margin: 0 auto;
              background: white;
              border-radius: 12px;
              box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
              overflow: hidden;
            }
            .header {
              background: linear-gradient(135deg, #10b981 0%, #059669 100%);
              color: white;
              padding: 40px 30px;
              text-align: center;
            }
            .content {
              padding: 40px 30px;
            }
            .income-highlight {
              background: linear-gradient(135deg, #fbbf24 0%, #f59e0b 100%);
              color: white;
              padding: 25px;
              border-radius: 12px;
              text-align: center;
              margin: 25px 0;
            }
            .feature-grid {
              display: grid;
              grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
              gap: 20px;
              margin: 30px 0;
            }
            .feature-item {
              background: #f8fafc;
              padding: 20px;
              border-radius: 8px;
              border-left: 4px solid #10b981;
            }
            .cta-button {
              background: #10b981;
              color: white;
              padding: 15px 30px;
              text-decoration: none;
              border-radius: 8px;
              display: inline-block;
              font-weight: 600;
              margin: 20px 0;
            }
            .footer {
              background: #f1f5f9;
              padding: 25px 30px;
              text-align: center;
              border-top: 1px solid #e2e8f0;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1 style="margin: 0; font-size: 32px;">üå± TerraMRV ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à!</h1>
              <p style="margin: 15px 0 0 0; font-size: 18px; opacity: 0.9;">
                ${farmerName}, sustainable farming ‡§ï‡•Ä ‡§®‡§à ÔøΩÔøΩ‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§ï‡§∞‡•á‡§Ç
              </p>
            </div>
            
            <div class="content">
              <p style="font-size: 18px; color: #374151;">
                ‡§¨‡§ß‡§æ‡§à ‡§π‡•ã! ‡§Ü‡§™‡§ï‡§æ TerraMRV account successfully create ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§
              </p>
              
              <div class="income-highlight">
                <h2 style="margin: 0 0 10px 0; font-size: 24px;">üí∞ ‡§Ü‡§™‡§ï‡•Ä Estimated Monthly Income</h2>
                <div style="font-size: 36px; font-weight: 800; margin: 10px 0;">‚Çπ${estimatedIncome.toLocaleString()}</div>
                <p style="margin: 0; opacity: 0.9;">Carbon credits ‡§∏‡•á ‡§π‡§∞ ‡§Æ‡§π‡•Ä‡§®‡•á</p>
              </div>
              
              <h3 style="color: #1f2937; margin: 30px 0 20px 0;">üöÄ ‡§Ö‡§¨ ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§∞‡•á‡§Ç:</h3>
              
              <div class="feature-grid">
                <div class="feature-item">
                  <h4 style="margin: 0 0 10px 0; color: #059669;">üìã Profile Complete ‡§ï‡§∞‡•á‡§Ç</h4>
                  <p style="margin: 0; font-size: 14px;">‡§Ö‡§™‡§®‡•Ä farming details ‡§î‡§∞ documents upload ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
                
                <div class="feature-item">
                  <h4 style="margin: 0 0 10px 0; color: #059669;">üåæ Projects Join ‡§ï‡§∞‡•á‡§Ç</h4>
                  <p style="margin: 0; font-size: 14px;">Carbon farming projects ‡§Æ‡•á‡§Ç participate ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
                
                <div class="feature-item">
                  <h4 style="margin: 0 0 10px 0; color: #059669;">üí≥ Income Track ‡§ï‡§∞‡•á‡§Ç</h4>
                  <p style="margin: 0; font-size: 14px;">‡§Ö‡§™‡§®‡•Ä carbon credits ‡§î‡§∞ payments monitor ‡§ï‡§∞‡•á‡§Ç</p>
                </div>
                
                <div class="feature-item">
                  <h4 style="margin: 0 0 10px 0; color: #059669;">ü§ñ AI Assistant</h4>
                  <p style="margin: 0; font-size: 14px;">Kisan AI ‡§∏‡•á farming guidance ‡§≤‡•á‡§Ç</p>
                </div>
              </div>
              
              <div style="text-align: center; margin: 30px 0;">
                <a href="${process.env.CLIENT_URL || "http://localhost:8080"}/farmer-dashboard" class="cta-button">
                  Dashboard ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§è‡§Ç ‚Üí
                </a>
              </div>
              
              <p style="color: #6b7280; font-size: 14px; margin-top: 30px;">
                ‡§ï‡•ã‡§à ‡§∏‡§µ‡§æ‡§≤ ‡§π‡•à? ‡§π‡§Æ‡§æ‡§∞‡•á customer support team ‡§∏ÔøΩÔøΩ 24/7 ‡§¨‡§æ‡§§ ‡§ï‡§∞‡•á‡§Ç‡•§
              </p>
            </div>
            
            <div class="footer">
              <p><strong>TerraMRV</strong> - Sustainable Farming Solutions</p>
              <p>‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•ã carbon credits ‡§∏‡•á extra income ‡§¶‡§ø‡§≤‡§æ‡§®‡•á ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç</p>
            </div>
          </div>
        </body>
        </html>
      `,
      text: `
TerraMRV ‡§Æ‡•á‡§Ç ‡§Ü‡§™ÔøΩÔøΩ‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à!

${farmerName}, ‡§¨‡§ß‡§æ‡§à ‡§π‡•ã! ‡§Ü‡§™‡§ï‡§æ account successfully create ‡§π‡•ã ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§

‡§Ü‡§™‡§ï‡•Ä Estimated Monthly Income: ‚Çπ${estimatedIncome.toLocaleString()}
(Carbon credits ‡§∏‡•á ‡§π‡§∞ ‡§Æ‡§π‡•Ä‡§®‡•á)

‡§Ö‡§¨ ‡§ï‡•ç‡§Ø‡§æ ‡§ï‡§∞‡•á‡§Ç:
‚Ä¢ Profile complete ‡§ï‡§∞‡•á‡§Ç
‚Ä¢ Carbon farming projects join ‡§ï‡§∞‡•á‡§Ç  
‚Ä¢ Income track ‡§ï‡§∞‡•á‡§Ç
‚Ä¢ AI Assistant ‡§∏‡•á guidance ‡§≤‡•á‡§Ç

Dashboard ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§è‡§Ç: ${process.env.CLIENT_URL || "http://localhost:8080"}/farmer-dashboard

TerraMRV - ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Carbon Income ‡§ï‡§æ ‡§®‡§Ø‡§æ ‡§∞‡§æ‡§∏‡•ç‡§§‡§æ
      `,
    };
  }

  // Send OTP Email
  async sendOTPEmail(email: string, otp: string): Promise<boolean> {
    try {
      if (!this.isConfigured) {
        // Development mode - log to console
        console.log(`\nüîê [OTP EMAIL] Sending to: ${email}`);
        console.log(`üìß [OTP CODE]: ${otp}`);
        console.log(`‚è∞ [EXPIRES]: 5 minutes\n`);
        return true;
      }

      const template = this.createOTPTemplate(email, otp);

      const msg = {
        to: email,
        from: {
          email: process.env.SENDGRID_FROM_EMAIL || "noreply@carbonroots.com",
          name: "TerraMRV",
        },
        subject: template.subject,
        text: template.text,
        html: template.html,
      };

      await sgMail.send(msg);
      console.log(`‚úÖ [SENDGRID] OTP email sent successfully to ${email}`);
      return true;
    } catch (error) {
      console.error(
        `‚ùå [SENDGRID] Failed to send OTP email to ${email}:`,
        error,
      );

      // Fallback to console logging in case of SendGrid failure
      console.log(`\nüîê [OTP FALLBACK] Email: ${email}`);
      console.log(`üìß [OTP CODE]: ${otp}`);
      console.log(`‚è∞ [EXPIRES]: 5 minutes\n`);

      return false;
    }
  }

  // Send Welcome Email
  async sendWelcomeEmail(
    email: string,
    farmerName: string,
    estimatedIncome: number = 0,
  ): Promise<boolean> {
    try {
      if (!this.isConfigured) {
        console.log(
          `\nüéâ [WELCOME EMAIL] Would send to: ${email} (${farmerName})`,
        );
        console.log(`üí∞ [ESTIMATED INCOME]: ‚Çπ${estimatedIncome}\n`);
        return true;
      }

      const template = this.createWelcomeTemplate(farmerName, estimatedIncome);

      const msg = {
        to: email,
        from: {
          email: process.env.SENDGRID_FROM_EMAIL || "noreply@carbonroots.com",
          name: "TerraMRV",
        },
        subject: template.subject,
        text: template.text,
        html: template.html,
      };

      await sgMail.send(msg);
      console.log(`‚úÖ [SENDGRID] Welcome email sent successfully to ${email}`);
      return true;
    } catch (error) {
      console.error(
        `‚ùå [SENDGRID] Failed to send welcome email to ${email}:`,
        error,
      );
      return false;
    }
  }

  // Send Password Reset Email
  async sendPasswordResetEmail(
    email: string,
    resetToken: string,
  ): Promise<boolean> {
    try {
      if (!this.isConfigured) {
        console.log(`\nüîê [PASSWORD RESET] Would send to: ${email}`);
        console.log(`üîë [RESET TOKEN]: ${resetToken}\n`);
        return true;
      }

      const resetUrl = `${process.env.CLIENT_URL || "http://localhost:8080"}/reset-password?token=${resetToken}`;

      const msg = {
        to: email,
        from: {
          email: process.env.SENDGRID_FROM_EMAIL || "noreply@carbonroots.com",
          name: "TerraMRV",
        },
        subject: "TerraMRV - Password Reset Request",
        html: `
          <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
            <h2 style="color: #10b981;">Password Reset Request</h2>
            <p>‡§Ü‡§™‡§®‡•á password reset ‡§ï‡•Ä request ‡§ï‡•Ä ‡§π‡•à‡•§</p>
            <p>‡§®‡•Ä‡§ö‡•á ‡§¶‡§ø‡§è ‡§ó‡§è link ‡§™‡§∞ click ‡§ï‡§∞‡§ï‡•á ‡§®‡§Ø‡§æ password set ‡§ï‡§∞‡•á‡§Ç:</p>
            <div style="text-align: center; margin: 30px 0;">
              <a href="${resetUrl}" style="background: #10b981; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px;">
                Reset Password
              </a>
            </div>
            <p>‡§Ø‡§π link 1 ‡§ò‡§Ç‡§ü‡•á ‡§ï‡•á ‡§≤‡§ø‡§è valid ‡§π‡•à‡•§</p>
            <p>‡§Ö‡§ó‡§∞ ‡§Ü‡§™‡§®‡•á ‡§Ø‡§π request ‡§®‡§π‡•Ä‡§Ç ‡§ï‡•Ä ‡§π‡•à, ‡§§‡•ã ‡§á‡§∏ email ‡§ï‡•ã ignore ‡§ï‡§∞‡•á‡§Ç‡•§</p>
            <hr style="margin: 30px 0;">
            <p style="color: #6b7280; font-size: 14px;">TerraMRV - ‡§ï‡§ø‡§∏‡§æ‡§®‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è Carbon Income ‡§ï‡§æ ‡§®‡§Ø‡§æ ‡§∞‡§æ‡§∏‡•ç‡§§‡§æ</p>
          </div>
        `,
        text: `
Password Reset Request

‡§Ü‡§™‡§®‡•á TerraMRV ‡§ï‡•á ‡§≤‡§ø‡§è password reset ‡§ï‡•Ä request ‡§ï‡•Ä ‡§π‡•à‡•§

Reset ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§∏ link ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç: ${resetUrl}

‡§Ø‡§π link 1 ‡§ò‡§Ç‡§ü‡•á ‡§ï‡•á ‡§≤‡§ø‡§è valid ‡§π‡•à‡•§

‡§ÖÔøΩÔøΩ‡§∞ ‡§Ü‡§™‡§®‡•á ‡§Ø‡§π request ‡§®‡§π‡•Ä‡§Ç ‡§ï‡•Ä ‡§π‡•à, ‡§§‡•ã ‡§á‡§∏ email ‡§ï‡•ã ignore ‡§ï‡§∞‡•á‡§Ç‡•§

TerraMRV
        `,
      };

      await sgMail.send(msg);
      console.log(
        `‚úÖ [SENDGRID] Password reset email sent successfully to ${email}`,
      );
      return true;
    } catch (error) {
      console.error(
        `‚ùå [SENDGRID] Failed to send password reset email to ${email}:`,
        error,
      );
      return false;
    }
  }

  // Check if SendGrid is properly configured
  isReady(): boolean {
    return this.isConfigured;
  }

  // Get configuration status
  getStatus(): { configured: boolean; provider: string } {
    return {
      configured: this.isConfigured,
      provider: this.isConfigured ? "SendGrid" : "Console (Development)",
    };
  }
}

export default EmailService;
